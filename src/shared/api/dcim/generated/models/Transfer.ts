/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  Assignment,
  AssignmentFromJSON,
  AssignmentFromJSONTyped,
  AssignmentToJSON,
  Ticket,
  TicketFromJSON,
  TicketFromJSONTyped,
  TicketToJSON
} from "./";

/**
 *
 * @export
 * @interface Transfer
 */
export interface Transfer {
  /**
   *
   * @type {Array<Array<Assignment>>}
   * @memberof Transfer
   */
  assignments: Array<Array<Assignment>>;
  /**
   *
   * @type {string}
   * @memberof Transfer
   */
  id: string;
  /**
   *
   * @type {Ticket}
   * @memberof Transfer
   */
  ticket: Ticket;
  /**
   *
   * @type {string}
   * @memberof Transfer
   */
  ticketId: string;
  /**
   *
   * @type {Date}
   * @memberof Transfer
   */
  createdAt: Date;
  /**
   *
   * @type {Date}
   * @memberof Transfer
   */
  updatedAt: Date;
  /**
   *
   * @type {Date}
   * @memberof Transfer
   */
  completedAt: Date;
}

export function TransferFromJSON(json: any): Transfer {
  return TransferFromJSONTyped(json, false);
}

export function TransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transfer {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    assignments: json["assignments"],
    id: json["id"],
    ticket: TicketFromJSON(json["ticket"]),
    ticketId: json["ticketId"],
    createdAt: new Date(json["createdAt"]),
    updatedAt: new Date(json["updatedAt"]),
    completedAt: new Date(json["completedAt"])
  };
}

export function TransferToJSON(value?: Transfer | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    assignments: value.assignments === undefined ? null : value.assignments,
    id: value.id === undefined ? null : value.id,
    ticket: TicketToJSON(value.ticket),
    ticketId: value.ticketId === undefined ? null : value.ticketId,
    createdAt: value.createdAt.toISOString(),
    updatedAt: value.updatedAt.toISOString(),
    completedAt: value.completedAt.toISOString()
  };
}
