/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { Manufacturer, ManufacturerFromJSON, ManufacturerFromJSONTyped, ManufacturerToJSON } from "./";

/**
 *
 * @export
 * @interface Disk
 */
export interface Disk {
  /**
   *
   * @type {string}
   * @memberof Disk
   */
  readonly type: DiskTypeEnum;
  /**
   *
   * @type {object}
   * @memberof Disk
   */
  outConnector: object;
  /**
   *
   * @type {Array<object>}
   * @memberof Disk
   */
  inConnectors: Array<object>;
  /**
   *
   * @type {string}
   * @memberof Disk
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof Disk
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof Disk
   */
  manufacturerId: string;
  /**
   *
   * @type {Manufacturer}
   * @memberof Disk
   */
  manufacturer: Manufacturer;
  /**
   *
   * @type {string}
   * @memberof Disk
   */
  diskType: DiskDiskTypeEnum;
  /**
   *
   * @type {number}
   * @memberof Disk
   */
  volume: number;
}

export function DiskFromJSON(json: any): Disk {
  return DiskFromJSONTyped(json, false);
}

export function DiskFromJSONTyped(json: any, ignoreDiscriminator: boolean): Disk {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    type: json["type"],
    outConnector: json["outConnector"],
    inConnectors: json["inConnectors"],
    id: json["id"],
    name: json["name"],
    manufacturerId: json["manufacturerId"],
    manufacturer: ManufacturerFromJSON(json["manufacturer"]),
    diskType: json["diskType"],
    volume: json["volume"]
  };
}

export function DiskToJSON(value?: Disk | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    outConnector: value.outConnector,
    inConnectors: value.inConnectors === undefined ? null : value.inConnectors,
    id: value.id === undefined ? null : value.id,
    name: value.name === undefined ? null : value.name,
    manufacturerId: value.manufacturerId === undefined ? null : value.manufacturerId,
    manufacturer: ManufacturerToJSON(value.manufacturer),
    diskType: value.diskType === undefined ? null : value.diskType,
    volume: value.volume === undefined ? null : value.volume
  };
}

/**
 * @export
 * @enum {string}
 */
export enum DiskTypeEnum {
  Unknown = "Unknown",
  Processor = "Processor",
  RAM = "RAM",
  RAIDController = "RAIDController",
  PowerUnit = "PowerUnit",
  Platform = "Platform",
  NetworkInterface = "NetworkInterface",
  Disk = "Disk",
  Switch = "Switch"
}
/**
 * @export
 * @enum {string}
 */
export enum DiskDiskTypeEnum {
  SSD = "SSD",
  HDD = "HDD"
}
