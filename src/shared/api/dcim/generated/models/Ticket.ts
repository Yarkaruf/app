/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { Transfer, TransferFromJSON, TransferFromJSONTyped, TransferToJSON } from "./";

/**
 *
 * @export
 * @interface Ticket
 */
export interface Ticket {
  /**
   *
   * @type {string}
   * @memberof Ticket
   */
  state: string;
  /**
   *
   * @type {Date}
   * @memberof Ticket
   */
  readonly createdAt: Date;
  /**
   *
   * @type {number}
   * @memberof Ticket
   */
  id: number;
  /**
   *
   * @type {Array<Transfer>}
   * @memberof Ticket
   */
  transfers: Array<Transfer>;
  /**
   *
   * @type {Date}
   * @memberof Ticket
   */
  updatedAt: Date;
}

export function TicketFromJSON(json: any): Ticket {
  return TicketFromJSONTyped(json, false);
}

export function TicketFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ticket {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    state: json["state"],
    createdAt: new Date(json["createdAt"]),
    id: json["id"],
    transfers: (json["transfers"] as Array<any>).map(TransferFromJSON),
    updatedAt: new Date(json["updatedAt"])
  };
}

export function TicketToJSON(value?: Ticket | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    state: value.state === undefined ? null : value.state,
    id: value.id === undefined ? null : value.id,
    transfers: (value.transfers as Array<any>).map(TransferToJSON),
    updatedAt: value.updatedAt.toISOString()
  };
}
