/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  ServerInterfaceEndpoint,
  ServerInterfaceEndpointFromJSON,
  ServerInterfaceEndpointFromJSONTyped,
  ServerInterfaceEndpointToJSON
} from "./";

/**
 *
 * @export
 * @interface ServerInterface
 */
export interface ServerInterface {
  /**
   *
   * @type {number}
   * @memberof ServerInterface
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof ServerInterface
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof ServerInterface
   */
  mac: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ServerInterface
   */
  tags: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ServerInterface
   */
  addresses?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof ServerInterface
   */
  serverId: number;
  /**
   *
   * @type {ServerInterfaceEndpoint}
   * @memberof ServerInterface
   */
  endpoint?: ServerInterfaceEndpoint;
}

export function ServerInterfaceFromJSON(json: any): ServerInterface {
  return ServerInterfaceFromJSONTyped(json, false);
}

export function ServerInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerInterface {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    name: json["name"],
    mac: json["mac"],
    tags: json["tags"],
    addresses: !exists(json, "addresses") ? undefined : json["addresses"],
    serverId: json["serverId"],
    endpoint: !exists(json, "endpoint") ? undefined : ServerInterfaceEndpointFromJSON(json["endpoint"])
  };
}

export function ServerInterfaceToJSON(value?: ServerInterface | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id === undefined ? null : value.id,
    name: value.name === undefined ? null : value.name,
    mac: value.mac === undefined ? null : value.mac,
    tags: value.tags === undefined ? null : value.tags,
    addresses: value.addresses === undefined ? null : value.addresses,
    serverId: value.serverId === undefined ? null : value.serverId,
    endpoint: ServerInterfaceEndpointToJSON(value.endpoint)
  };
}
