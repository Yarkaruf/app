/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  Asset,
  AssetFromJSON,
  AssetFromJSONTyped,
  AssetToJSON,
  Assignment,
  AssignmentFromJSON,
  AssignmentFromJSONTyped,
  AssignmentToJSON,
  Connector,
  ConnectorFromJSON,
  ConnectorFromJSONTyped,
  ConnectorToJSON
} from "./";

/**
 *
 * @export
 * @interface ViaConnectorAssetAssignment
 */
export interface ViaConnectorAssetAssignment {
  /**
   *
   * @type {string}
   * @memberof ViaConnectorAssetAssignment
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof ViaConnectorAssetAssignment
   */
  assetId: string;
  /**
   *
   * @type {Asset}
   * @memberof ViaConnectorAssetAssignment
   */
  asset: Asset;
  /**
   *
   * @type {string}
   * @memberof ViaConnectorAssetAssignment
   */
  type: ViaConnectorAssetAssignmentTypeEnum;
  /**
   *
   * @type {string}
   * @memberof ViaConnectorAssetAssignment
   */
  role: ViaConnectorAssetAssignmentRoleEnum;
  /**
   *
   * @type {Assignment}
   * @memberof ViaConnectorAssetAssignment
   */
  assignment: Assignment;
  /**
   *
   * @type {Connector}
   * @memberof ViaConnectorAssetAssignment
   */
  connector: Connector;
}

export function ViaConnectorAssetAssignmentFromJSON(json: any): ViaConnectorAssetAssignment {
  return ViaConnectorAssetAssignmentFromJSONTyped(json, false);
}

export function ViaConnectorAssetAssignmentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ViaConnectorAssetAssignment {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    assetId: json["assetId"],
    asset: AssetFromJSON(json["asset"]),
    type: json["type"],
    role: json["role"],
    assignment: AssignmentFromJSON(json["assignment"]),
    connector: ConnectorFromJSON(json["connector"])
  };
}

export function ViaConnectorAssetAssignmentToJSON(value?: ViaConnectorAssetAssignment | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id === undefined ? null : value.id,
    assetId: value.assetId === undefined ? null : value.assetId,
    asset: AssetToJSON(value.asset),
    type: value.type === undefined ? null : value.type,
    role: value.role === undefined ? null : value.role,
    assignment: AssignmentToJSON(value.assignment),
    connector: ConnectorToJSON(value.connector)
  };
}

/**
 * @export
 * @enum {string}
 */
export enum ViaConnectorAssetAssignmentTypeEnum {
  SIMPLEASSIGNMENT = "SIMPLE_ASSIGNMENT",
  VIACONNECTORASSIGNMENT = "VIA_CONNECTOR_ASSIGNMENT"
}
/**
 * @export
 * @enum {string}
 */
export enum ViaConnectorAssetAssignmentRoleEnum {
  MASTER = "MASTER",
  SLAVE = "SLAVE"
}
