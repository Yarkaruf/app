/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  AssetAssignment,
  AssetAssignmentFromJSON,
  AssetAssignmentFromJSONTyped,
  AssetAssignmentToJSON,
  Transfer,
  TransferFromJSON,
  TransferFromJSONTyped,
  TransferToJSON,
  Warehouse,
  WarehouseFromJSON,
  WarehouseFromJSONTyped,
  WarehouseToJSON
} from "./";

/**
 *
 * @export
 * @interface ToWarehouseAssignment
 */
export interface ToWarehouseAssignment {
  /**
   *
   * @type {object}
   * @memberof ToWarehouseAssignment
   */
  readonly asset: object;
  /**
   *
   * @type {object}
   * @memberof ToWarehouseAssignment
   */
  readonly slaveAsset: object;
  /**
   *
   * @type {string}
   * @memberof ToWarehouseAssignment
   */
  warehouseId: string;
  /**
   *
   * @type {Warehouse}
   * @memberof ToWarehouseAssignment
   */
  warehouse: Warehouse;
  /**
   *
   * @type {string}
   * @memberof ToWarehouseAssignment
   */
  type: ToWarehouseAssignmentTypeEnum;
  /**
   *
   * @type {string}
   * @memberof ToWarehouseAssignment
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof ToWarehouseAssignment
   */
  state: ToWarehouseAssignmentStateEnum;
  /**
   *
   * @type {Transfer}
   * @memberof ToWarehouseAssignment
   */
  transfer: Transfer;
  /**
   *
   * @type {Array<AssetAssignment>}
   * @memberof ToWarehouseAssignment
   */
  assetAssignments: Array<AssetAssignment>;
}

export function ToWarehouseAssignmentFromJSON(json: any): ToWarehouseAssignment {
  return ToWarehouseAssignmentFromJSONTyped(json, false);
}

export function ToWarehouseAssignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToWarehouseAssignment {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    asset: json["asset"],
    slaveAsset: json["slaveAsset"],
    warehouseId: json["warehouseId"],
    warehouse: WarehouseFromJSON(json["warehouse"]),
    type: json["type"],
    id: json["id"],
    state: json["_state"],
    transfer: TransferFromJSON(json["transfer"]),
    assetAssignments: (json["assetAssignments"] as Array<any>).map(AssetAssignmentFromJSON)
  };
}

export function ToWarehouseAssignmentToJSON(value?: ToWarehouseAssignment | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    warehouseId: value.warehouseId === undefined ? null : value.warehouseId,
    warehouse: WarehouseToJSON(value.warehouse),
    type: value.type === undefined ? null : value.type,
    id: value.id === undefined ? null : value.id,
    _state: value.state === undefined ? null : value.state,
    transfer: TransferToJSON(value.transfer),
    assetAssignments: (value.assetAssignments as Array<any>).map(AssetAssignmentToJSON)
  };
}

/**
 * @export
 * @enum {string}
 */
export enum ToWarehouseAssignmentTypeEnum {
  TOWAREHOUSEASSIGNMENT = "TO_WAREHOUSE_ASSIGNMENT",
  TORACKASSIGNMENT = "TO_RACK_ASSIGNMENT",
  BETWEENASSETSASSIGNMENT = "BETWEEN_ASSETS_ASSIGNMENT"
}
/**
 * @export
 * @enum {string}
 */
export enum ToWarehouseAssignmentStateEnum {
  ACTUAL = "ACTUAL",
  PLANNED = "PLANNED",
  DELETED = "DELETED"
}
