/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface AssignViaConnectorDto
 */
export interface AssignViaConnectorDto {
  /**
   *
   * @type {string}
   * @memberof AssignViaConnectorDto
   */
  firstAssetId: string;
  /**
   *
   * @type {string}
   * @memberof AssignViaConnectorDto
   */
  firstAssetConnectorId?: string;
  /**
   *
   * @type {string}
   * @memberof AssignViaConnectorDto
   */
  firstAssetRole: AssignViaConnectorDtoFirstAssetRoleEnum;
  /**
   *
   * @type {boolean}
   * @memberof AssignViaConnectorDto
   */
  forceAssignment?: boolean;
  /**
   *
   * @type {string}
   * @memberof AssignViaConnectorDto
   */
  transferId?: string;
  /**
   *
   * @type {string}
   * @memberof AssignViaConnectorDto
   */
  secondAssetId: string;
  /**
   *
   * @type {string}
   * @memberof AssignViaConnectorDto
   */
  secondAssetConnectorId?: string;
  /**
   *
   * @type {string}
   * @memberof AssignViaConnectorDto
   */
  secondAssetRole: AssignViaConnectorDtoSecondAssetRoleEnum;
}

export function AssignViaConnectorDtoFromJSON(json: any): AssignViaConnectorDto {
  return AssignViaConnectorDtoFromJSONTyped(json, false);
}

export function AssignViaConnectorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssignViaConnectorDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    firstAssetId: json["firstAssetId"],
    firstAssetConnectorId: !exists(json, "firstAssetConnectorId") ? undefined : json["firstAssetConnectorId"],
    firstAssetRole: json["firstAssetRole"],
    forceAssignment: !exists(json, "forceAssignment") ? undefined : json["forceAssignment"],
    transferId: !exists(json, "transferId") ? undefined : json["transferId"],
    secondAssetId: json["secondAssetId"],
    secondAssetConnectorId: !exists(json, "secondAssetConnectorId") ? undefined : json["secondAssetConnectorId"],
    secondAssetRole: json["secondAssetRole"]
  };
}

export function AssignViaConnectorDtoToJSON(value?: AssignViaConnectorDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    firstAssetId: value.firstAssetId === undefined ? null : value.firstAssetId,
    firstAssetConnectorId: value.firstAssetConnectorId === undefined ? null : value.firstAssetConnectorId,
    firstAssetRole: value.firstAssetRole === undefined ? null : value.firstAssetRole,
    forceAssignment: value.forceAssignment === undefined ? null : value.forceAssignment,
    transferId: value.transferId === undefined ? null : value.transferId,
    secondAssetId: value.secondAssetId === undefined ? null : value.secondAssetId,
    secondAssetConnectorId: value.secondAssetConnectorId === undefined ? null : value.secondAssetConnectorId,
    secondAssetRole: value.secondAssetRole === undefined ? null : value.secondAssetRole
  };
}

/**
 * @export
 * @enum {string}
 */
export enum AssignViaConnectorDtoFirstAssetRoleEnum {
  MASTER = "MASTER",
  SLAVE = "SLAVE"
}
/**
 * @export
 * @enum {string}
 */
export enum AssignViaConnectorDtoSecondAssetRoleEnum {
  MASTER = "MASTER",
  SLAVE = "SLAVE"
}
