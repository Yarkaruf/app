/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { Role, RoleFromJSON, RoleFromJSONTyped, RoleToJSON } from "./";

/**
 *
 * @export
 * @interface Admin
 */
export interface Admin {
  /**
   *
   * @type {Array<Role>}
   * @memberof Admin
   */
  roles: Array<Role>;
  /**
   *
   * @type {string}
   * @memberof Admin
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof Admin
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof Admin
   */
  email: string;
  /**
   *
   * @type {string}
   * @memberof Admin
   */
  phone: string;
  /**
   *
   * @type {string}
   * @memberof Admin
   */
  passwordHash: string;
  /**
   *
   * @type {Date}
   * @memberof Admin
   */
  createdAt: Date;
  /**
   *
   * @type {boolean}
   * @memberof Admin
   */
  blocked: boolean;
  /**
   *
   * @type {string}
   * @memberof Admin
   */
  blockReason?: string;
}

export function AdminFromJSON(json: any): Admin {
  return AdminFromJSONTyped(json, false);
}

export function AdminFromJSONTyped(json: any, ignoreDiscriminator: boolean): Admin {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    roles: (json["roles"] as Array<any>).map(RoleFromJSON),
    id: json["id"],
    name: json["name"],
    email: json["email"],
    phone: json["phone"],
    passwordHash: json["passwordHash"],
    createdAt: new Date(json["createdAt"]),
    blocked: json["blocked"],
    blockReason: !exists(json, "blockReason") ? undefined : json["blockReason"]
  };
}

export function AdminToJSON(value?: Admin | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    roles: (value.roles as Array<any>).map(RoleToJSON),
    id: value.id === undefined ? null : value.id,
    name: value.name === undefined ? null : value.name,
    email: value.email === undefined ? null : value.email,
    phone: value.phone === undefined ? null : value.phone,
    passwordHash: value.passwordHash === undefined ? null : value.passwordHash,
    createdAt: value.createdAt.toISOString(),
    blocked: value.blocked === undefined ? null : value.blocked,
    blockReason: value.blockReason === undefined ? null : value.blockReason
  };
}
