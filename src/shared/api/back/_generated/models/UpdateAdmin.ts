/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { Role, RoleFromJSON, RoleFromJSONTyped, RoleToJSON } from "./";

/**
 *
 * @export
 * @interface UpdateAdmin
 */
export interface UpdateAdmin {
  /**
   *
   * @type {Array<Role>}
   * @memberof UpdateAdmin
   */
  roles: Array<Role>;
  /**
   *
   * @type {string}
   * @memberof UpdateAdmin
   */
  email: string;
  /**
   *
   * @type {string}
   * @memberof UpdateAdmin
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof UpdateAdmin
   */
  password?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateAdmin
   */
  phone: string;
}

export function UpdateAdminFromJSON(json: any): UpdateAdmin {
  return UpdateAdminFromJSONTyped(json, false);
}

export function UpdateAdminFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAdmin {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    roles: (json["roles"] as Array<any>).map(RoleFromJSON),
    email: json["email"],
    name: json["name"],
    password: !exists(json, "password") ? undefined : json["password"],
    phone: json["phone"]
  };
}

export function UpdateAdminToJSON(value?: UpdateAdmin | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    roles: (value.roles as Array<any>).map(RoleToJSON),
    email: value.email === undefined ? null : value.email,
    name: value.name === undefined ? null : value.name,
    password: value.password === undefined ? null : value.password,
    phone: value.phone === undefined ? null : value.phone
  };
}
