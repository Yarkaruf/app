/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  CheckoutSessionItem,
  CheckoutSessionItemFromJSON,
  CheckoutSessionItemFromJSONTyped,
  CheckoutSessionItemToJSON
} from "./";

/**
 *
 * @export
 * @interface CheckoutSession
 */
export interface CheckoutSession {
  /**
   *
   * @type {string}
   * @memberof CheckoutSession
   */
  amount: string;
  /**
   *
   * @type {string}
   * @memberof CheckoutSession
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof CheckoutSession
   */
  userId: string;
  /**
   *
   * @type {string}
   * @memberof CheckoutSession
   */
  adminId?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof CheckoutSession
   */
  invoiceIds: Array<string>;
  /**
   *
   * @type {string}
   * @memberof CheckoutSession
   */
  status: CheckoutSessionStatusEnum;
  /**
   *
   * @type {string}
   * @memberof CheckoutSession
   */
  operationId: string;
  /**
   *
   * @type {Array<CheckoutSessionItem>}
   * @memberof CheckoutSession
   */
  items: Array<CheckoutSessionItem>;
}

export function CheckoutSessionFromJSON(json: any): CheckoutSession {
  return CheckoutSessionFromJSONTyped(json, false);
}

export function CheckoutSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckoutSession {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    amount: json["amount"],
    id: json["id"],
    userId: json["userId"],
    adminId: !exists(json, "adminId") ? undefined : json["adminId"],
    invoiceIds: json["invoiceIds"],
    status: json["status"],
    operationId: json["operationId"],
    items: (json["items"] as Array<any>).map(CheckoutSessionItemFromJSON)
  };
}

export function CheckoutSessionToJSON(value?: CheckoutSession | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    amount: value.amount === undefined ? null : value.amount,
    id: value.id === undefined ? null : value.id,
    userId: value.userId === undefined ? null : value.userId,
    adminId: value.adminId === undefined ? null : value.adminId,
    invoiceIds: value.invoiceIds === undefined ? null : value.invoiceIds,
    status: value.status === undefined ? null : value.status,
    operationId: value.operationId === undefined ? null : value.operationId,
    items: (value.items as Array<any>).map(CheckoutSessionItemToJSON)
  };
}

/**
 * @export
 * @enum {string}
 */
export enum CheckoutSessionStatusEnum {
  WAITFORINVOICES = "WAIT_FOR_INVOICES",
  WAITFORCONFIRM = "WAIT_FOR_CONFIRM",
  OPEN = "OPEN",
  PAID = "PAID",
  VOID = "VOID"
}
