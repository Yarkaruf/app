/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface User
 */
export interface User {
  /**
   *
   * @type {string}
   * @memberof User
   */
  emailConfirmationToken: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  phoneToken: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  emailFirstStepToken: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  emailSecondStepToken: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  passwordRestoreToken: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  email: string;
  /**
   *
   * @type {boolean}
   * @memberof User
   */
  emailConfirmed: boolean;
  /**
   *
   * @type {string}
   * @memberof User
   */
  passwordHash: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  phone?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  name?: string;
  /**
   *
   * @type {Date}
   * @memberof User
   */
  createdAt: Date;
  /**
   *
   * @type {string}
   * @memberof User
   */
  newPhone?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  newEmail?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  countryName?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  cityName?: string;
  /**
   *
   * @type {boolean}
   * @memberof User
   */
  blocked: boolean;
  /**
   *
   * @type {string}
   * @memberof User
   */
  blockReason?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  address?: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  postcode?: string;
}

export function UserFromJSON(json: any): User {
  return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    emailConfirmationToken: json["emailConfirmationToken"],
    phoneToken: json["phoneToken"],
    emailFirstStepToken: json["emailFirstStepToken"],
    emailSecondStepToken: json["emailSecondStepToken"],
    passwordRestoreToken: json["passwordRestoreToken"],
    id: json["id"],
    email: json["email"],
    emailConfirmed: json["emailConfirmed"],
    passwordHash: json["passwordHash"],
    phone: !exists(json, "phone") ? undefined : json["phone"],
    name: !exists(json, "name") ? undefined : json["name"],
    createdAt: new Date(json["createdAt"]),
    newPhone: !exists(json, "newPhone") ? undefined : json["newPhone"],
    newEmail: !exists(json, "newEmail") ? undefined : json["newEmail"],
    countryName: !exists(json, "countryName") ? undefined : json["countryName"],
    cityName: !exists(json, "cityName") ? undefined : json["cityName"],
    blocked: json["blocked"],
    blockReason: !exists(json, "blockReason") ? undefined : json["blockReason"],
    address: !exists(json, "address") ? undefined : json["address"],
    postcode: !exists(json, "postcode") ? undefined : json["postcode"]
  };
}

export function UserToJSON(value?: User | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    emailConfirmationToken: value.emailConfirmationToken === undefined ? null : value.emailConfirmationToken,
    phoneToken: value.phoneToken === undefined ? null : value.phoneToken,
    emailFirstStepToken: value.emailFirstStepToken === undefined ? null : value.emailFirstStepToken,
    emailSecondStepToken: value.emailSecondStepToken === undefined ? null : value.emailSecondStepToken,
    passwordRestoreToken: value.passwordRestoreToken === undefined ? null : value.passwordRestoreToken,
    id: value.id === undefined ? null : value.id,
    email: value.email === undefined ? null : value.email,
    emailConfirmed: value.emailConfirmed === undefined ? null : value.emailConfirmed,
    passwordHash: value.passwordHash === undefined ? null : value.passwordHash,
    phone: value.phone === undefined ? null : value.phone,
    name: value.name === undefined ? null : value.name,
    createdAt: value.createdAt.toISOString(),
    newPhone: value.newPhone === undefined ? null : value.newPhone,
    newEmail: value.newEmail === undefined ? null : value.newEmail,
    countryName: value.countryName === undefined ? null : value.countryName,
    cityName: value.cityName === undefined ? null : value.cityName,
    blocked: value.blocked === undefined ? null : value.blocked,
    blockReason: value.blockReason === undefined ? null : value.blockReason,
    address: value.address === undefined ? null : value.address,
    postcode: value.postcode === undefined ? null : value.postcode
  };
}
