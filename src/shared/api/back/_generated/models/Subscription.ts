/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  SubscriptionAction,
  SubscriptionActionFromJSON,
  SubscriptionActionFromJSONTyped,
  SubscriptionActionToJSON,
  SubscriptionItem,
  SubscriptionItemFromJSON,
  SubscriptionItemFromJSONTyped,
  SubscriptionItemToJSON
} from "./";

/**
 *
 * @export
 * @interface Subscription
 */
export interface Subscription {
  /**
   *
   * @type {string}
   * @memberof Subscription
   */
  monthlyPrice: string;
  /**
   *
   * @type {string}
   * @memberof Subscription
   */
  hourlyPrice: string;
  /**
   *
   * @type {string}
   * @memberof Subscription
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof Subscription
   */
  userId: string;
  /**
   *
   * @type {string}
   * @memberof Subscription
   */
  type: SubscriptionTypeEnum;
  /**
   *
   * @type {string}
   * @memberof Subscription
   */
  status: SubscriptionStatusEnum;
  /**
   *
   * @type {boolean}
   * @memberof Subscription
   */
  autoProlongEnabled: boolean;
  /**
   *
   * @type {Date}
   * @memberof Subscription
   */
  createdAt: Date;
  /**
   *
   * @type {Date}
   * @memberof Subscription
   */
  paidUntil?: Date;
  /**
   *
   * @type {Date}
   * @memberof Subscription
   */
  unpaidFrom?: Date;
  /**
   *
   * @type {Date}
   * @memberof Subscription
   */
  paymentDate?: Date;
  /**
   *
   * @type {Date}
   * @memberof Subscription
   */
  autoProlongRunsAt?: Date;
  /**
   *
   * @type {SubscriptionAction}
   * @memberof Subscription
   */
  currentAction: SubscriptionAction;
  /**
   *
   * @type {Array<SubscriptionItem>}
   * @memberof Subscription
   */
  items: Array<SubscriptionItem>;
}

export function SubscriptionFromJSON(json: any): Subscription {
  return SubscriptionFromJSONTyped(json, false);
}

export function SubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Subscription {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    monthlyPrice: json["monthlyPrice"],
    hourlyPrice: json["hourlyPrice"],
    id: json["id"],
    userId: json["userId"],
    type: json["type"],
    status: json["status"],
    autoProlongEnabled: json["autoProlongEnabled"],
    createdAt: new Date(json["createdAt"]),
    paidUntil: !exists(json, "paidUntil") ? undefined : new Date(json["paidUntil"]),
    unpaidFrom: !exists(json, "unpaidFrom") ? undefined : new Date(json["unpaidFrom"]),
    paymentDate: !exists(json, "paymentDate") ? undefined : new Date(json["paymentDate"]),
    autoProlongRunsAt: !exists(json, "autoProlongRunsAt") ? undefined : new Date(json["autoProlongRunsAt"]),
    currentAction: SubscriptionActionFromJSON(json["currentAction"]),
    items: (json["items"] as Array<any>).map(SubscriptionItemFromJSON)
  };
}

export function SubscriptionToJSON(value?: Subscription | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    monthlyPrice: value.monthlyPrice === undefined ? null : value.monthlyPrice,
    hourlyPrice: value.hourlyPrice === undefined ? null : value.hourlyPrice,
    id: value.id === undefined ? null : value.id,
    userId: value.userId === undefined ? null : value.userId,
    type: value.type === undefined ? null : value.type,
    status: value.status === undefined ? null : value.status,
    autoProlongEnabled: value.autoProlongEnabled === undefined ? null : value.autoProlongEnabled,
    createdAt: value.createdAt.toISOString(),
    paidUntil: value.paidUntil === undefined ? null : value.paidUntil.toISOString(),
    unpaidFrom: value.unpaidFrom === undefined ? null : value.unpaidFrom.toISOString(),
    paymentDate: value.paymentDate === undefined ? null : value.paymentDate.toISOString(),
    autoProlongRunsAt: value.autoProlongRunsAt === undefined ? null : value.autoProlongRunsAt.toISOString(),
    currentAction: SubscriptionActionToJSON(value.currentAction),
    items: (value.items as Array<any>).map(SubscriptionItemToJSON)
  };
}

/**
 * @export
 * @enum {string}
 */
export enum SubscriptionTypeEnum {
  Hourly = "hourly",
  Monthly = "monthly",
  MonthlyOnly = "monthly-only"
}
/**
 * @export
 * @enum {string}
 */
export enum SubscriptionStatusEnum {
  New = "new",
  Active = "active",
  Canceled = "canceled",
  Unpaid = "unpaid"
}
