/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  FinanceHistoryPaymentSystem,
  FinanceHistoryPaymentSystemFromJSON,
  FinanceHistoryPaymentSystemFromJSONTyped,
  FinanceHistoryPaymentSystemToJSON,
  FinanceHistoryType,
  FinanceHistoryTypeFromJSON,
  FinanceHistoryTypeFromJSONTyped,
  FinanceHistoryTypeToJSON
} from "./";

/**
 *
 * @export
 * @interface FinanceHistoryEntry
 */
export interface FinanceHistoryEntry {
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  amount: string;
  /**
   *
   * @type {FinanceHistoryType}
   * @memberof FinanceHistoryEntry
   */
  type: FinanceHistoryType;
  /**
   *
   * @type {FinanceHistoryPaymentSystem}
   * @memberof FinanceHistoryEntry
   */
  paymentSystem?: FinanceHistoryPaymentSystem;
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  id: string;
  /**
   *
   * @type {number}
   * @memberof FinanceHistoryEntry
   */
  number: number;
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  userId: string;
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  invoiceId?: string;
  /**
   *
   * @type {number}
   * @memberof FinanceHistoryEntry
   */
  invoiceNumber?: number;
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  depositId?: string;
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  autoPaymentId?: string;
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  manualChangeId?: string;
  /**
   *
   * @type {string}
   * @memberof FinanceHistoryEntry
   */
  paymentId?: string;
  /**
   *
   * @type {Date}
   * @memberof FinanceHistoryEntry
   */
  createdAt: Date;
}

export function FinanceHistoryEntryFromJSON(json: any): FinanceHistoryEntry {
  return FinanceHistoryEntryFromJSONTyped(json, false);
}

export function FinanceHistoryEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinanceHistoryEntry {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    amount: json["amount"],
    type: FinanceHistoryTypeFromJSON(json["type"]),
    paymentSystem: !exists(json, "paymentSystem")
      ? undefined
      : FinanceHistoryPaymentSystemFromJSON(json["paymentSystem"]),
    id: json["id"],
    number: json["number"],
    userId: json["userId"],
    invoiceId: !exists(json, "invoiceId") ? undefined : json["invoiceId"],
    invoiceNumber: !exists(json, "invoiceNumber") ? undefined : json["invoiceNumber"],
    depositId: !exists(json, "depositId") ? undefined : json["depositId"],
    autoPaymentId: !exists(json, "autoPaymentId") ? undefined : json["autoPaymentId"],
    manualChangeId: !exists(json, "manualChangeId") ? undefined : json["manualChangeId"],
    paymentId: !exists(json, "paymentId") ? undefined : json["paymentId"],
    createdAt: new Date(json["createdAt"])
  };
}

export function FinanceHistoryEntryToJSON(value?: FinanceHistoryEntry | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    amount: value.amount === undefined ? null : value.amount,
    type: FinanceHistoryTypeToJSON(value.type),
    paymentSystem: FinanceHistoryPaymentSystemToJSON(value.paymentSystem),
    id: value.id === undefined ? null : value.id,
    number: value.number === undefined ? null : value.number,
    userId: value.userId === undefined ? null : value.userId,
    invoiceId: value.invoiceId === undefined ? null : value.invoiceId,
    invoiceNumber: value.invoiceNumber === undefined ? null : value.invoiceNumber,
    depositId: value.depositId === undefined ? null : value.depositId,
    autoPaymentId: value.autoPaymentId === undefined ? null : value.autoPaymentId,
    manualChangeId: value.manualChangeId === undefined ? null : value.manualChangeId,
    paymentId: value.paymentId === undefined ? null : value.paymentId,
    createdAt: value.createdAt.toISOString()
  };
}
