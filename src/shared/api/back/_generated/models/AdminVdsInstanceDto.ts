/* tslint:disable */
/* eslint-disable */
/**
 * Medialand API
 * Medialand API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  ProBackupConfig,
  ProBackupConfigFromJSON,
  ProBackupConfigFromJSONTyped,
  ProBackupConfigToJSON,
  VdsConfig,
  VdsConfigFromJSON,
  VdsConfigFromJSONTyped,
  VdsConfigToJSON
} from "./";

/**
 *
 * @export
 * @interface AdminVdsInstanceDto
 */
export interface AdminVdsInstanceDto {
  /**
   *
   * @type {string}
   * @memberof AdminVdsInstanceDto
   */
  userId: string;
  /**
   *
   * @type {string}
   * @memberof AdminVdsInstanceDto
   */
  projectId: string;
  /**
   *
   * @type {string}
   * @memberof AdminVdsInstanceDto
   */
  dataCenterId: string;
  /**
   *
   * @type {string}
   * @memberof AdminVdsInstanceDto
   */
  osId: string;
  /**
   *
   * @type {string}
   * @memberof AdminVdsInstanceDto
   */
  tariffId: string;
  /**
   *
   * @type {boolean}
   * @memberof AdminVdsInstanceDto
   */
  proBackupEnabled: boolean;
  /**
   *
   * @type {ProBackupConfig}
   * @memberof AdminVdsInstanceDto
   */
  proBackupConfig: ProBackupConfig;
  /**
   *
   * @type {Array<string>}
   * @memberof AdminVdsInstanceDto
   */
  sshKeyIds: Array<string>;
  /**
   *
   * @type {Array<VdsConfig>}
   * @memberof AdminVdsInstanceDto
   */
  config: Array<VdsConfig>;
  /**
   *
   * @type {string}
   * @memberof AdminVdsInstanceDto
   */
  subscriptionPeriod?: AdminVdsInstanceDtoSubscriptionPeriodEnum;
  /**
   *
   * @type {string}
   * @memberof AdminVdsInstanceDto
   */
  subscriptionType: AdminVdsInstanceDtoSubscriptionTypeEnum;
}

export function AdminVdsInstanceDtoFromJSON(json: any): AdminVdsInstanceDto {
  return AdminVdsInstanceDtoFromJSONTyped(json, false);
}

export function AdminVdsInstanceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminVdsInstanceDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    userId: json["userId"],
    projectId: json["projectId"],
    dataCenterId: json["dataCenterId"],
    osId: json["osId"],
    tariffId: json["tariffId"],
    proBackupEnabled: json["proBackupEnabled"],
    proBackupConfig: ProBackupConfigFromJSON(json["proBackupConfig"]),
    sshKeyIds: json["sshKeyIds"],
    config: (json["config"] as Array<any>).map(VdsConfigFromJSON),
    subscriptionPeriod: !exists(json, "subscriptionPeriod") ? undefined : json["subscriptionPeriod"],
    subscriptionType: json["subscriptionType"]
  };
}

export function AdminVdsInstanceDtoToJSON(value?: AdminVdsInstanceDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    userId: value.userId === undefined ? null : value.userId,
    projectId: value.projectId === undefined ? null : value.projectId,
    dataCenterId: value.dataCenterId === undefined ? null : value.dataCenterId,
    osId: value.osId === undefined ? null : value.osId,
    tariffId: value.tariffId === undefined ? null : value.tariffId,
    proBackupEnabled: value.proBackupEnabled === undefined ? null : value.proBackupEnabled,
    proBackupConfig: ProBackupConfigToJSON(value.proBackupConfig),
    sshKeyIds: value.sshKeyIds === undefined ? null : value.sshKeyIds,
    config: (value.config as Array<any>).map(VdsConfigToJSON),
    subscriptionPeriod: value.subscriptionPeriod === undefined ? null : value.subscriptionPeriod,
    subscriptionType: value.subscriptionType === undefined ? null : value.subscriptionType
  };
}

/**
 * @export
 * @enum {string}
 */
export enum AdminVdsInstanceDtoSubscriptionPeriodEnum {
  MONTH = "MONTH",
  MONTH3 = "MONTH3",
  MONTH6 = "MONTH6",
  MONTH12 = "MONTH12"
}
/**
 * @export
 * @enum {string}
 */
export enum AdminVdsInstanceDtoSubscriptionTypeEnum {
  Hourly = "hourly",
  Monthly = "monthly",
  MonthlyOnly = "monthly-only"
}
